desc information_schema.transaction_list;
Field	Type	Null	Key	Default	Extra
ID	bigint(21) unsigned	NO			
USER	varchar(80)	NO			
HOST	varchar(64)	NO			
DB	varchar(64)	YES			
COMMAND	varchar(16)	NO			
STATE	varchar(64)	YES			
STATEMENT_SECONDS	decimal(6505,0)	NO			
TRANSACTION_SECONDS	decimal(6505,0)	NO			
COMMAND_SECONDS	decimal(6505,0)	NO			
READ_ONLY	tinyint(1)	NO			
SQL_LOG_BIN	tinyint(1)	NO			
create table t1 (id integer not null auto_increment, i int, primary key (id))
engine = innodb;
create user mysqluser1;

##
## Test Open Transaction
##

# connection a
# Start a transaction
begin;
insert into t1 (i) values
(1),(2),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14);
# connection default
show transaction_list;
Id	User	Host	db	State	Statement_seconds	Transaction_seconds	Command_seconds	Read_only	Sql_log_bin
#	event_scheduler	localhost	NULL	NULL	State	#	#	#	1
#	mysqluser1	localhost	test	NULL	State	#	#	#	1
#	root	localhost	test	NULL	State	#	#	#	1
select statement_seconds from information_schema.transaction_list where Id = conn_a;
statement_seconds
0.000000
include/assert.inc [For an open transation, Transaction_seconds should not be zero]
include/assert.inc [Transaction_seconds is larger than Command_seconds.]
include/assert.inc [Transaction is not read only]
include/assert.inc [sql_log_bin value incorrect]
# connection a
insert into t1 (i) select i from t1 where id > 6 AND id < 20;
select count(*) from t1 where id > 6 AND id < 20;
count(*)
13
commit;
# connection default
show transaction_list;
Id	User	Host	db	State	Statement_seconds	Transaction_seconds	Command_seconds	Read_only	Sql_log_bin
#	event_scheduler	localhost	NULL	NULL	State	#	#	#	1
#	mysqluser1	localhost	test	NULL	State	#	#	#	1
#	root	localhost	test	NULL	State	#	#	#	1
select statement_seconds from information_schema.transaction_list where Id = conn_a;
statement_seconds
0.000000
select transaction_seconds from information_schema.transaction_list where Id = conn_a;
transaction_seconds
0.000000
include/assert.inc [Command_seconds is increasing.]
# connection a
begin;
insert into t1 (i) select i from t1 where id > 6 AND id < 20;
select count(*) from t1;
count(*)
33
rollback;
# connection default
show transaction_list;
Id	User	Host	db	State	Statement_seconds	Transaction_seconds	Command_seconds	Read_only	Sql_log_bin
#	event_scheduler	localhost	NULL	NULL	State	#	#	#	1
#	mysqluser1	localhost	test	NULL	State	#	#	#	1
#	root	localhost	test	NULL	State	#	#	#	1
select statement_seconds from information_schema.transaction_list where Id = conn_a;
statement_seconds
0.000000
select transaction_seconds from information_schema.transaction_list where Id = conn_a;
transaction_seconds
0.000000
include/assert.inc [Command_seconds is increasing.]
include/assert.inc [Transaction is read only]
include/assert.inc [sql_log_bin value incorrect]

##
## Test Autocommit Transaction (single statement)
##

# connection a
# Start another transaction autocommit
insert into t1 (i) select i from t1 where id > 6 AND id < 20;
# connection default
show transaction_list;
Id	User	Host	db	State	Statement_seconds	Transaction_seconds	Command_seconds	Read_only	Sql_log_bin
#	event_scheduler	localhost	NULL	NULL	State	#	#	#	1
#	mysqluser1	localhost	test	NULL	State	#	#	#	1
#	root	localhost	test	NULL	State	#	#	#	1
select statement_seconds from information_schema.transaction_list where Id = conn_a;
statement_seconds
0.000000
select transaction_seconds from information_schema.transaction_list where Id = conn_a;
transaction_seconds
0.000000

##
## Test long-running query in open transaction
##

# connection a
select sleep(10);
# connection default
include/assert.inc [Statement seconds is increasing.]
include/assert.inc [Transaction seconds is increasing.]
include/assert.inc [Command seconds is increasing.]
# connection a
sleep(10)
0
# connection default
show transaction_list;
Id	User	Host	db	State	Statement_seconds	Transaction_seconds	Command_seconds	Read_only	Sql_log_bin
#	event_scheduler	localhost	NULL	NULL	State	#	#	#	1
#	mysqluser1	localhost	test	NULL	State	#	#	#	1
#	root	localhost	test	NULL	State	#	#	#	1
select statement_seconds from information_schema.transaction_list where Id = conn_a;
statement_seconds
0.000000
select transaction_seconds from information_schema.transaction_list where Id = conn_a;
transaction_seconds
0.000000
drop user mysqluser1;
drop table t1;
